package com.javarush.test.level08.lesson08.task05;

import java.util.*;

/* Удалить людей, имеющих одинаковые имена
Создать словарь (Map<String, String>) занести в него десять записей по принципу «фамилия» - «имя».
Удалить людей, имеющих одинаковые имена.
*/

public class Solution
{
    public static void main(String[] args)
    {
        HashMap<String, String> map = createMap();
        removeTheFirstNameDuplicates(map);
        for (Map.Entry<String,String> pair:map.entrySet())
        {
            System.out.println(pair.getKey()+" "+pair.getValue());
        }

    }

    public static HashMap<String, String> createMap()
    {
        HashMap<String, String> map = new HashMap<>();
        map.put("f1","n1");
        map.put("f2","n2");
        map.put("f3","n3");
        map.put("f4","n3");
        map.put("f5","n5");
        map.put("f6","n6");
        map.put("f7","n7");
        map.put("f8","n8");
        map.put("f9","n9");
        map.put("f10","n10");
        return map;

    }

    public static void removeTheFirstNameDuplicates(HashMap<String, String> map)
    {
        int count=0;
        LinkedList<String> setValue= new LinkedList<>();
        Set<String> copy= new HashSet<>();

        for(Map.Entry<String,String> pair : map.entrySet()){
                setValue.add(pair.getValue());
            }

        for(String s:setValue){
            for(String st:setValue){
              if(s.equals(st))
                  count=count+1;
              }
            if (count>=2)
                copy.add(s);
                count=0;
        }
        for(String s : copy){
            removeItemFromMapByValue(map,s);
        }
    }

    public static void removeItemFromMapByValue(HashMap<String, String> map, String value)
    {
        HashMap<String, String> copy = new HashMap<String, String>(map);
        for (Map.Entry<String, String> pair: copy.entrySet())
        {
            if (pair.getValue().equals(value))
                map.remove(pair.getKey());
        }
    }
}
